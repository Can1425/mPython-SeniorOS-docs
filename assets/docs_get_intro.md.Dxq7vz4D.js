import{_ as t,c as a,o as e,U as i}from"./chunks/framework.DqMUgYTQ.js";const u=JSON.parse('{"title":"步骤认识","description":"","frontmatter":{"title":"步骤认识"},"headers":[],"relativePath":"docs/get/intro.md","filePath":"docs/get/intro.md","lastUpdated":1711877224000}'),o={name:"docs/get/intro.md"},r=i('<h1 id="克隆仓库" tabindex="-1">克隆仓库 <a class="header-anchor" href="#克隆仓库" aria-label="Permalink to &quot;克隆仓库&quot;">​</a></h1><h1 id="步骤认识" tabindex="-1">步骤认识 <a class="header-anchor" href="#步骤认识" aria-label="Permalink to &quot;步骤认识&quot;">​</a></h1><p>恭喜，你已经完成了相关环境配置，接下来要做的是如何获取 SeniorOS 源代码</p><p>本章节将介绍两种获取 SeniorOS 源代码的方式</p><h2 id="git-克隆仓库" tabindex="-1">Git 克隆仓库 <a class="header-anchor" href="#git-克隆仓库" aria-label="Permalink to &quot;Git 克隆仓库&quot;">​</a></h2><p>该种方法随相对比较繁琐，但我们极度推荐你使用该种方法，这将为你的后续开发省下许多麻烦</p><p>如果你准备使用该种方法但未配置好 Git，请回到<a href="/docs/initall.html#安装-git">Git 详细安装教程</a>按相关步骤进行操作</p><h2 id="gitee-下载-zip-文件" tabindex="-1">Gitee 下载 .zip 文件 <a class="header-anchor" href="#gitee-下载-zip-文件" aria-label="Permalink to &quot;Gitee 下载 .zip 文件&quot;">​</a></h2><p>该种方法相较于较为简单，我们推荐在不准备对该项目进行编译的情况下使用</p><details class="details custom-block"><summary>Details</summary><p>如果你是开发者或使用者，请不要在非必要情况下使用该方法。由于 Build.py 依赖于 GitPython 库，所以使用该方法获取的源代码将无法直接被编译（因为缺少 .git 目录），这也意味着如果你想要向我们的仓库提交更改将无法实现</p></details>',10),s=[r];function n(l,d,c,h,p,_){return e(),a("div",null,s)}const f=t(o,[["render",n]]);export{u as __pageData,f as default};
